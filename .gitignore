#include <WiFi.h>
#include <WebSocketsClient.h>

// Informasi WiFi
const char* ssid = "iphone";
const char* password = "12345678";

// URL WebSocket server di Vercel
const char* webSocketServer = "wss://my-project-pr8rig78i-muhammad-novians-projects.vercel.app/api/websocket";

// Inisialisasi WebSocketClient
WebSocketsClient webSocket;

void webSocketEvent(WStype_t type, uint8_t * payload, size_t length) {
  switch (type) {
    case WStype_DISCONNECTED:
      Serial.println("WebSocket disconnected");
      break;
    case WStype_CONNECTED:
      Serial.println("WebSocket connected");
      webSocket.sendTXT("ESP32 Connected");
      break;
    case WStype_TEXT:
      Serial.printf("Message received: %s\n", payload);
      break;
  }
}

void setup() {
  Serial.begin(115200);

  // Menghubungkan ESP32 ke WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");

  // Menghubungkan ke server WebSocket
  webSocket.beginSSL(webSocketServer, 443, "/api/websocket");
  webSocket.onEvent(webSocketEvent);
}

void loop() {
  // Memproses event WebSocket
  if (WiFi.status() == WL_CONNECTED) {
    webSocket.loop();
    
    // Cek jika WebSocket terputus, coba sambungkan kembali
    if (!webSocket.isConnected()) {
      Serial.println("WebSocket disconnected. Reconnecting...");
      webSocket.beginSSL(webSocketServer, 443, "/api/websocket");
      delay(5000);  // Delay lebih lama sebelum mencoba reconnect
    }
    
    // Kirim data sensor setiap detik
    String message = String("Light: ") + random(100, 1000) + " lx";  // Contoh data sensor
    webSocket.sendTXT(message);
    delay(1000);
  } else {
    Serial.println("WiFi disconnected. Reconnecting...");
    WiFi.reconnect();
  }
}